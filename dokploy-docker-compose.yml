services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
    volumes:
      - ../files/mongodb_data:/data/db
    networks:
      - dokploy-network
    restart: unless-stopped
    # No external access needed - internal only

  # Frontend (Next.js)
  frontend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - .:/app
      - ../files/node_modules:/app/node_modules
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL_PRODUCTION=https://api.yourdomain.com
    command: sh -c "npm install --legacy-peer-deps && npm run build --workspace=intervo-widget && npm run build --workspace=intervo-frontend && npm exec --workspace=intervo-frontend -- next start"
    expose:
      - 3000
    depends_on:
      - backend
    networks:
      - dokploy-network
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.intervo-frontend.rule=Host(`app.yourdomain.com`)
      - traefik.http.routers.intervo-frontend.entrypoints=websecure
      - traefik.http.routers.intervo-frontend.tls.certResolver=letsencrypt
      - traefik.http.services.intervo-frontend.loadbalancer.server.port=3000
      # Redirect HTTP to HTTPS
      - traefik.http.routers.intervo-frontend-http.rule=Host(`app.yourdomain.com`)
      - traefik.http.routers.intervo-frontend-http.entrypoints=web
      - traefik.http.routers.intervo-frontend-http.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

  # Backend (Node.js)
  backend:
    image: node:20-alpine
    working_dir: /app/packages/intervo-backend
    volumes:
      - .:/app
      - ../files/backend_node_modules:/app/packages/intervo-backend/node_modules
      - ../files/backend_logs:/app/packages/intervo-backend/logs
      - ../files/backend_uploads:/app/packages/intervo-backend/uploads
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/intervo?authSource=admin
      - SESSION_SECRET=${SESSION_SECRET}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      # Twilio Configuration
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_API_KEY=${TWILIO_API_KEY}
      - TWILIO_API_SECRET=${TWILIO_API_SECRET}
      - TWILIO_APP_SID=${TWILIO_APP_SID}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      # AI Services
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - AI_FLOW_API_KEY=${AI_FLOW_API_KEY}
      # Speech Services
      - ASSEMBLYAI_API_KEY=${ASSEMBLYAI_API_KEY}
      - AZURE_SPEECH_KEY=${AZURE_SPEECH_KEY}
      - AZURE_SPEECH_REGION=${AZURE_SPEECH_REGION}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - ELEVENLABS_VOICE_ID=${ELEVENLABS_VOICE_ID}
      # AWS Services
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      # Google Services
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    command: sh -c "npm install --legacy-peer-deps && npm start"
    expose:
      - 3003
    depends_on:
      - mongodb
    networks:
      - dokploy-network
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.intervo-backend.rule=Host(`api.yourdomain.com`)
      - traefik.http.routers.intervo-backend.entrypoints=websecure
      - traefik.http.routers.intervo-backend.tls.certResolver=letsencrypt
      - traefik.http.services.intervo-backend.loadbalancer.server.port=3003
      # Redirect HTTP to HTTPS
      - traefik.http.routers.intervo-backend-http.rule=Host(`api.yourdomain.com`)
      - traefik.http.routers.intervo-backend-http.entrypoints=web
      - traefik.http.routers.intervo-backend-http.middlewares=redirect-to-https
      # Health check
      - traefik.http.routers.intervo-backend.service=intervo-backend
      - traefik.http.services.intervo-backend.loadbalancer.healthcheck.path=/health
      - traefik.http.services.intervo-backend.loadbalancer.healthcheck.interval=30s

  # RAG API (Python)
  rag-api:
    image: python:3.11-slim
    working_dir: /app/packages/intervo-backend/rag_py
    volumes:
      - .:/app
      - ../files/rag_api_cache:/root/.cache
      - ../files/vector_stores:/app/packages/intervo-backend/rag_py/vector_stores
    environment:
      - PYTHONPATH=/app/packages/intervo-backend
      - ENVIRONMENT=production
      - BACKEND_URL=http://backend:3003
    command: sh -c "pip install --no-cache-dir -r requirements.txt && python api.py"
    expose:
      - 4003
    networks:
      - dokploy-network
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.intervo-rag.rule=Host(`rag.yourdomain.com`)
      - traefik.http.routers.intervo-rag.entrypoints=websecure
      - traefik.http.routers.intervo-rag.tls.certResolver=letsencrypt
      - traefik.http.services.intervo-rag.loadbalancer.server.port=4003
      # Redirect HTTP to HTTPS
      - traefik.http.routers.intervo-rag-http.rule=Host(`rag.yourdomain.com`)
      - traefik.http.routers.intervo-rag-http.entrypoints=web
      - traefik.http.routers.intervo-rag-http.middlewares=redirect-to-https

networks:
  dokploy-network:
    external: true
