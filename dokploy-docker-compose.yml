version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
    volumes:
      - ../files/mongodb_data:/data/db
    networks:
      - dokploy-network
    restart: unless-stopped
    # No external access needed - internal only

  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.prod
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.yourdomain.com
      - NEXT_PUBLIC_RAG_API_URL=https://rag.yourdomain.com
    volumes:
      - ../files/frontend_cache:/app/.next/cache
    expose:
      - 3000
    depends_on:
      - backend
    networks:
      - dokploy-network
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.intervo-frontend.rule=Host(`app.yourdomain.com`)
      - traefik.http.routers.intervo-frontend.entrypoints=websecure
      - traefik.http.routers.intervo-frontend.tls.certResolver=letsencrypt
      - traefik.http.services.intervo-frontend.loadbalancer.server.port=3000
      # Redirect HTTP to HTTPS
      - traefik.http.routers.intervo-frontend-http.rule=Host(`app.yourdomain.com`)
      - traefik.http.routers.intervo-frontend-http.entrypoints=web
      - traefik.http.routers.intervo-frontend-http.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

  # Backend (Node.js)
  backend:
    build:
      context: ./packages/intervo-backend
      dockerfile: Dockerfile.prod
    environment:
      - NODE_ENV=production
      - PORT=3003
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/intervo?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=https://app.yourdomain.com
      - RAG_API_URL=http://rag-api:4003
      # Add other production environment variables
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
    volumes:
      - ../files/backend_logs:/app/logs
      - ../files/backend_uploads:/app/uploads
    expose:
      - 3003
    depends_on:
      - mongodb
    networks:
      - dokploy-network
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.intervo-backend.rule=Host(`api.yourdomain.com`)
      - traefik.http.routers.intervo-backend.entrypoints=websecure
      - traefik.http.routers.intervo-backend.tls.certResolver=letsencrypt
      - traefik.http.services.intervo-backend.loadbalancer.server.port=3003
      # Redirect HTTP to HTTPS
      - traefik.http.routers.intervo-backend-http.rule=Host(`api.yourdomain.com`)
      - traefik.http.routers.intervo-backend-http.entrypoints=web
      - traefik.http.routers.intervo-backend-http.middlewares=redirect-to-https
      # Health check
      - traefik.http.routers.intervo-backend.service=intervo-backend
      - traefik.http.services.intervo-backend.loadbalancer.healthcheck.path=/health
      - traefik.http.services.intervo-backend.loadbalancer.healthcheck.interval=30s

  # RAG API (Python)
  rag-api:
    build:
      context: ./packages/intervo-backend/rag_py
      dockerfile: Dockerfile.prod
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      - BACKEND_URL=http://backend:3003
    volumes:
      - ../files/rag_cache:/root/.cache
      - ../files/vector_stores:/app/vector_stores
    expose:
      - 4003
    networks:
      - dokploy-network
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.intervo-rag.rule=Host(`rag.yourdomain.com`)
      - traefik.http.routers.intervo-rag.entrypoints=websecure
      - traefik.http.routers.intervo-rag.tls.certResolver=letsencrypt
      - traefik.http.services.intervo-rag.loadbalancer.server.port=4003
      # Redirect HTTP to HTTPS
      - traefik.http.routers.intervo-rag-http.rule=Host(`rag.yourdomain.com`)
      - traefik.http.routers.intervo-rag-http.entrypoints=web
      - traefik.http.routers.intervo-rag-http.middlewares=redirect-to-https

networks:
  dokploy-network:
    external: true

volumes:
  # All volumes are handled by Dokploy's ../files/ structure
  # No need to define them here as they're bind mounts
