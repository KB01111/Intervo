# Dokploy-specific Dockerfile for Next.js frontend (no standalone mode)
FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json package-lock.json* ./
COPY packages/intervo-frontend/package.json ./packages/intervo-frontend/
COPY packages/intervo-widget/package.json ./packages/intervo-widget/
COPY packages/intervo-backend/package.json ./packages/intervo-backend/

RUN npm ci --legacy-peer-deps --include=dev

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build the widget first - install dependencies directly in widget directory
WORKDIR /app/packages/intervo-widget
RUN npm install --include=dev
WORKDIR /app
RUN npm run build --workspace=intervo-widget

# Build the frontend
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN npm run build --workspace=intervo-frontend

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy the built application (NO STANDALONE MODE)
COPY --from=builder /app/packages/intervo-frontend/.next ./packages/intervo-frontend/.next
COPY --from=builder /app/packages/intervo-frontend/public ./packages/intervo-frontend/public
COPY --from=builder /app/packages/intervo-frontend/package*.json ./packages/intervo-frontend/
COPY --from=builder /app/packages/intervo-frontend/next.config.mjs ./packages/intervo-frontend/

# Copy widget build
COPY --from=builder /app/packages/intervo-widget/dist ./packages/intervo-widget/dist

# Copy node_modules for production dependencies
COPY --from=deps /app/node_modules ./node_modules

# Change ownership
RUN chown -R nextjs:nodejs /app

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

WORKDIR /app/packages/intervo-frontend
CMD ["npm", "start"]
